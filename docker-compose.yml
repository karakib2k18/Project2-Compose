version: "3.9"

networks:
  jenkins:

volumes:
  jenkins-data:
  docker-certs-ca:
  docker-certs-client:
  dind-cache:

services:
  docker:  # Docker-in-Docker (DinD) engine
    image: docker:27-dind
    container_name: dind
    privileged: true
    environment:
      DOCKER_TLS_CERTDIR: /certs          # enable TLS and auto-generate certs
    volumes:
      - docker-certs-ca:/certs/ca         # CA certs (server side)
      - docker-certs-client:/certs/client # client certs (shared read-only with Jenkins)
      - dind-cache:/var/lib/docker        # cache to speed up image builds
    networks:
      jenkins:
        aliases:
          - docker                        # Jenkins will use tcp://docker:2376
    hostname: docker
    healthcheck:
      test: ["CMD", "docker", "info"]
      interval: 15s
      timeout: 5s
      retries: 10
    restart: unless-stopped

  jenkins:  # Jenkins controller that talks to DinD securely over TLS
    build: ./jenkins
    image: local/jenkins-lts-dockercli:latest
    container_name: jenkins
    user: "0:0"                            # let Jenkins run docker CLI
    environment:
      DOCKER_HOST: tcp://docker:2376
      DOCKER_CERT_PATH: /certs/client
      DOCKER_TLS_VERIFY: "1"
      # Keep the setup wizard enabled for safer first-time secure setup
      # JAVA_OPTS: "-Djenkins.install.runSetupWizard=false"
    volumes:
      - jenkins-data:/var/jenkins_home
      - docker-certs-client:/certs/client:ro
    ports:
      - "8080:8080"                        # Jenkins UI
      - "50000:50000"                      # inbound agents (optional)
    networks:
      - jenkins
    depends_on:
      docker:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:8080/login > /dev/null 2>&1 || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 10
    restart: unless-stopped
